version: "3"
services:
    # project
    app:
        container_name: dartweek-academia-do-flutter
        build:
            args:
                user: academia-do-flutter
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: app
        restart: always
        working_dir: /var/www/
        volumes:
            - ./dw-copa-do-mundo/:/var/www
        environment:
            - APP_NAME=academia-do-flutter
            - DB_DATABASE=laravel
            - DB_PASSWORD=root
            - DB_USERNAME=root
            - DB_HOST=mysql
            - REDIS_HOST=redis
            - CACHE_DRIVER=redis
            - QUEUE_CONNECTION=redis
            - SESSION_DRIVER=redis
            - REDIS_PASSWORD=null
            - REDIS_PORT=6379
        networks:
            - dartweek-academia-do-flutter
        depends_on:
            - mysql
            - redis

    # nginx
    nginx:
        container_name: nginx
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - 8180:80
        volumes:
            - ./dw-copa-do-mundo:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks:
            - dartweek-academia-do-flutter
        depends_on:
            - app

    # db mysql
    mysql:
        container_name: mysql
        image: mariadb:10.5.8
        restart: always
        tty: true
        environment:
            MYSQL_DATABASE: laravel
            MYSQL_ROOT_PASSWORD: root
            MYSQL_PASSWORD: root
            MYSQL_USER: root
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - ./docker/mysql/dbdata:/var/lib/mysql
        ports:
            - 3388:3306
        networks:
            - dartweek-academia-do-flutter

    #PHPMYADMIN  Service
    phpmyadmin:
      container_name: phpmyadmin
      image: phpmyadmin/phpmyadmin:latest
      environment:
        - PMA_HOST=mysql
        - PMA_USER=root
        - PMA_PASSWORD=root
      restart: always
      ports:
        - 8181:80
      networks:
        - dartweek-academia-do-flutter
      depends_on:
        - mysql
    # redis
    redis:
      container_name: redis
      image: redis:latest
      networks:
          - dartweek-academia-do-flutter
    # queue
    queue:
        container_name: queue
        build:
            args:
                user: academia-do-flutter
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes:
            - ./dw-copa-do-mundo:/var/www
        depends_on:
            - redis
            - app
            - nginx
        networks:
            - dartweek-academia-do-flutter

networks:
    dartweek-academia-do-flutter:
        driver: bridge
